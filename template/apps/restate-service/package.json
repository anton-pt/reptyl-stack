{
  "name": "@reptyl/restate-service",
  "type": "module",
  "main": "./dist/index.js",
  "types": "./dist/index.d.js",
  "scripts": {
    "build": "tsc --build",
    "build-package": "tsc --noEmitOnError",
    "build-package:watch": "tsc --noEmitOnError --watch",
    "clean": "tsc --build --clean",
    "dev": "tsx watch --inspect=9230 --env-file=.env ./src/app.ts",
    "register:watch": "until [ \"$(docker inspect -f {{.State.Running}} $(docker compose --project-name=reptyl-stack ps -q restate-dev) 2>/dev/null)\" = \"true\" ]; do\n  sleep 0.1\ndone; until [ \"$(docker inspect -f {{.State.Health.Status}} $(docker compose --project-name=reptyl-stack ps -q restate-dev))\" = \"healthy\" ]; do\n  sleep 0.1\ndone;\nsleep 1.0;\ndocker compose --project-name=reptyl-stack exec -T restate-dev restate deployments register http://host.docker.internal:9080/ --yes --force; fswatch -o src | xargs -n1 -I{} sh -c 'docker compose --project-name=reptyl-stack exec -T restate-dev restate deployments register http://host.docker.internal:9080/ --yes --force'",
    "type-check": "tsc --noEmit",
    "test": "vitest run",
    "test:watch": "vitest watch"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.12",
    "@reptyl/domain-model": "*",
    "@reptyl/persistence": "*",
    "@restatedev/restate-sdk": "^1.7.2",
    "@restatedev/restate-sdk-zod": "^1.7.2",
    "ai": "^4.3.16",
    "axios": "^1.10.0",
    "langfuse": "^3.38.2",
    "langfuse-core": "^3.38.2",
    "pino": "^9.7.0",
    "zod": "^3.25.74"
  },
  "devDependencies": {
    "@types/node": "^24.0.10",
    "pino-pretty": "^13.0.0",
    "tsx": "^4.20.3",
    "vitest": "^3.2.4"
  }
}
